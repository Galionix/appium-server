"""
–£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Instagram —á–µ—Ä–µ–∑ Appium
"""

def check_instagram_feed_opened(driver):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Instagram –æ—Ç–∫—Ä—ã–ª—Å—è –∏ –º—ã –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Ñ–∏–¥–∞
    
    Args:
        driver: WebDriver instance –æ—Ç Appium
        
    Returns:
        bool: True –µ—Å–ª–∏ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ Instagram, False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º package name
        current_package = driver.current_package
        print(f"–¢–µ–∫—É—â–µ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: {current_package}")
        
        if "instagram" not in current_package.lower():
            print("‚ùå Instagram –Ω–µ –æ—Ç–∫—Ä—ã—Ç")
            return False
            
        print("‚úÖ Instagram –æ—Ç–∫—Ä—ã—Ç, –ø—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É...")
        
        # –ò—â–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã - –∫–Ω–æ–ø–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π
        try:
            # –°–ø–æ—Å–æ–± 1: –ü–æ resource-id (—Å–∞–º—ã–π –Ω–∞–¥–µ–∂–Ω—ã–π)
            inbox_button = driver.find_element("id", "com.instagram.android:id/action_bar_inbox_button")
            print("‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ ID - –º—ã –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ!")
            return True
        except:
            print("–ö–Ω–æ–ø–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ ID, –ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–∏–µ —Å–ø–æ—Å–æ–±—ã...")
        
        # –°–ø–æ—Å–æ–± 2: –ü–æ xpath —Å content-desc
        try:
            inbox_button = driver.find_element("xpath", "//android.widget.Button[contains(@content-desc, '—Å–æ–æ–±—â–µ–Ω–∏—è') or contains(@content-desc, '–Ω–µ–ø—Ä–æ—á–∏—Ç–∞–Ω–Ω—ã—Ö')]")
            print("‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ content-desc - –º—ã –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ!")
            return True
        except:
            print("–ö–Ω–æ–ø–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ content-desc...")
        
        # –°–ø–æ—Å–æ–± 3: –ü–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º (–µ—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –µ—Å—Ç—å –≤ —ç—Ç–æ–π –æ–±–ª–∞—Å—Ç–∏)
        try:
            inbox_button = driver.find_element("xpath", "//android.widget.Button[@bounds='[926,78][1058,232]']")
            print("‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º - –º—ã –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ!")
            return True
        except:
            print("–ö–Ω–æ–ø–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º...")
            
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –∏—â–µ–º –¥—Ä—É–≥–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        feed_elements = [
            "com.instagram.android:id/action_bar_camera_button",  # –ö–Ω–æ–ø–∫–∞ –∫–∞–º–µ—Ä—ã
            "//android.widget.TextView[@text='Instagram']",  # –õ–æ–≥–æ—Ç–∏–ø
        ]
        
        for element_locator in feed_elements:
            try:
                if element_locator.startswith("com.instagram"):
                    element = driver.find_element("id", element_locator)
                else:
                    element = driver.find_element("xpath", element_locator)
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω —ç–ª–µ–º–µ–Ω—Ç –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {element_locator}")
                return True
            except:
                continue
                
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
        return False
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ: {e}")
        return False


def open_instagram_from_home(driver):
    """
    –û—Ç–∫—Ä—ã–≤–∞–µ—Ç Instagram —Å –≥–ª–∞–≤–Ω–æ–≥–æ —ç–∫—Ä–∞–Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    
    Args:
        driver: WebDriver instance –æ—Ç Appium
        
    Returns:
        bool: True –µ—Å–ª–∏ Instagram —É—Å–ø–µ—à–Ω–æ –æ—Ç–∫—Ä—ã—Ç –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    """
    try:
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω
        driver.press_keycode(3)  # KEYCODE_HOME
        print("–ü–µ—Ä–µ—à–ª–∏ –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω")
        
        from time import sleep
        sleep(2)
        
        # –ò—â–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å Instagram
        instagram_elements = driver.find_elements("xpath", '//*[@text="Instagram" or @content-desc="Instagram"]')
        print(f"–ù–∞–π–¥–µ–Ω–æ {len(instagram_elements)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å Instagram")
        
        if not instagram_elements:
            print("–≠–ª–µ–º–µ–Ω—Ç—ã —Å Instagram –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return False
        
        # –ü—Ä–æ–±—É–µ–º –∫–ª–∏–∫–Ω—É—Ç—å –ø–æ –∫–∞–∂–¥–æ–º—É –Ω–∞–π–¥–µ–Ω–Ω–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
        for i, element in enumerate(instagram_elements):
            try:
                text = element.get_attribute("text") or ""
                desc = element.get_attribute("content-desc") or ""
                print(f"–≠–ª–µ–º–µ–Ω—Ç {i}: text='{text}', content-desc='{desc}'")
                
                # –ü–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏ –∫–ª–∏–∫–∞–µ–º
                location = element.location
                size = element.size
                center_x = location['x'] + size['width'] // 2
                center_y = location['y'] + size['height'] // 2
                
                print(f"–ö–ª–∏–∫–∞–µ–º –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º ({center_x}, {center_y})")
                driver.tap([(center_x, center_y)], 100)
                
                sleep(3)  # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ Instagram
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ Instagram
                if check_instagram_feed_opened(driver):
                    print("üéâ –£—Å–ø–µ—à–Ω–æ! Instagram –æ—Ç–∫—Ä—ã—Ç –∏ –º—ã –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ —Å –ª–µ–Ω—Ç–æ–π!")
                    return True
                else:
                    print("Instagram –æ—Ç–∫—Ä—ã–ª—Å—è, –Ω–æ –Ω–µ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ. –ü—Ä–æ–±—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π —ç–ª–µ–º–µ–Ω—Ç...")
                    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–∏
                    driver.press_keycode(3)
                    sleep(1)
                    
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É {i}: {e}")
                continue
        
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å Instagram –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ")
        return False
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ Instagram: {e}")
        return False
    
    
# ...existing code...

# def click_on_new_messages(driver):
#     """
#     –ò—â–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —Å–ø–∏—Å–∫–µ —á–∞—Ç–æ–≤ –∏ –∫–ª–∏–∫–∞–µ—Ç –ø–æ –ø–µ—Ä–≤–æ–º—É –Ω–∞–π–¥–µ–Ω–Ω–æ–º—É —á–∞—Ç—É
    
#     Args:
#         driver: WebDriver instance –æ—Ç Appium
        
#     Returns:
#         bool: True –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –∏ –∫–ª–∏–∫–Ω—É—Ç —á–∞—Ç —Å –Ω–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏, False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
#     """
#     try:
#         print("–ò—â–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π...")
        
#         # –ò—â–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
#         new_message_indicators = driver.find_elements(
#             "xpath", 
#             "//android.view.View[@resource-id='com.instagram.android:id/thread_indicator_status_dot']"
#         )
        
#         if not new_message_indicators:
#             print("‚ùå –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
#             return False
            
#         print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(new_message_indicators)} –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π")
        
#         # –ö–ª–∏–∫–∞–µ–º –ø–æ –ø–µ—Ä–≤–æ–º—É –Ω–∞–π–¥–µ–Ω–Ω–æ–º—É —á–∞—Ç—É —Å –Ω–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
#         for i, indicator in enumerate(new_message_indicators):
#             try:
#                 print(f"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä {i + 1}...")
                
#                 # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç (—á–∞—Ç)
#                 parent_chat = indicator.find_element("xpath", "./..")
                
#                 # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ (–µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ)
#                 try:
#                     chat_info = parent_chat.get_attribute("content-desc") or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —á–∞—Ç"
#                     print(f"–ù–∞–π–¥–µ–Ω —á–∞—Ç —Å –Ω–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏: {chat_info}")
#                 except:
#                     print("–ù–∞–π–¥–µ–Ω —á–∞—Ç —Å –Ω–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ (–±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏)")

#                 # –ö–ª–∏–∫–∞–µ–º –ø–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—É (—á–∞—Ç—É)
#                 indicator.click()
#                 print(f"‚úÖ –ö–ª–∏–∫–Ω—É–ª–∏ –ø–æ —á–∞—Ç—É —Å –Ω–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏!")
                
#                 from time import sleep
#                 sleep(2)  # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —á–∞—Ç–∞
                
#                 return True
                
#             except Exception as e:
#                 print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –ø–æ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—É {i + 1}: {e}")
#                 continue
        
#         print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∫–ª–∏–∫–Ω—É—Ç—å –Ω–∏ –ø–æ –æ–¥–Ω–æ–º—É —á–∞—Ç—É —Å –Ω–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏")
#         return False
        
#     except Exception as e:
#         print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")
#         return False


def check_messages_screen_opened(driver):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –Ω–∞—Ö–æ–¥–∏–º—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–π Instagram
    
    Args:
        driver: WebDriver instance –æ—Ç Appium
        
    Returns:
        bool: True –µ—Å–ª–∏ –Ω–∞ —ç–∫—Ä–∞–Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–π, False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
    """
    try:
        # –ò—â–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —ç–∫—Ä–∞–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
        messages_indicators = [
            "//android.widget.TextView[@text='–°–æ–æ–±—â–µ–Ω–∏—è']",
            "//android.widget.TextView[@text='Messages']", 
            "com.instagram.android:id/action_bar_search",  # –ö–Ω–æ–ø–∫–∞ –ø–æ–∏—Å–∫–∞ –≤ —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
            "com.instagram.android:id/thread_list_container",  # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å–ø–∏—Å–∫–∞ —á–∞—Ç–æ–≤
        ]
        
        for indicator in messages_indicators:
            try:
                if indicator.startswith("com.instagram"):
                    element = driver.find_element("id", indicator)
                else:
                    element = driver.find_element("xpath", indicator)
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω —ç–ª–µ–º–µ–Ω—Ç —ç–∫—Ä–∞–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–π: {indicator}")
                return True
            except:
                continue
                
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —ç–∫—Ä–∞–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–π")
        return False
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —ç–∫—Ä–∞–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")
        return False

# ...existing code...
# ...existing code...

def click_on_new_messages(driver):
    """
    –ò—â–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞—Ö —á–∞—Ç–æ–≤ –∏ –∫–ª–∏–∫–∞–µ—Ç –ø–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É —á–∞—Ç–∞
    
    Args:
        driver: WebDriver instance –æ—Ç Appium
        
    Returns:
        bool: True –µ—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –∏ –∫–ª–∏–∫–Ω—É—Ç —á–∞—Ç —Å –Ω–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏, False –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ
    """
    try:
        print("–ò—â–µ–º —á–∞—Ç—ã —Å –Ω–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏...")
        
        # –°–Ω–∞—á–∞–ª–∞ –Ω–∞—Ö–æ–¥–∏–º –≤—Å–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —á–∞—Ç–æ–≤
        chat_containers = driver.find_elements(
            "xpath", 
            "//android.widget.Button[@resource-id='com.instagram.android:id/row_inbox_container']"
        )
        
        if not chat_containers:
            print("‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —á–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            return False
            
        print(f"–ù–∞–π–¥–µ–Ω–æ {len(chat_containers)} —á–∞—Ç–æ–≤")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        for i, container in enumerate(chat_containers):
            try:
                print(f"–ü—Ä–æ–≤–µ—Ä—è–µ–º —á–∞—Ç {i + 1}...")
                
                # –ò—â–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤–Ω—É—Ç—Ä–∏ —ç—Ç–æ–≥–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
                try:
                    new_message_dot = container.find_element(
                        "xpath", 
                        ".//android.view.View[@resource-id='com.instagram.android:id/thread_indicator_status_dot']"
                    )
                    
                    # –ï—Å–ª–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–∞–π–¥–µ–Ω, –ø–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
                    chat_desc = container.get_attribute("content-desc") or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —á–∞—Ç"
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω —á–∞—Ç —Å –Ω–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏: {chat_desc}")
                    
                    # –ö–ª–∏–∫–∞–µ–º –ø–æ –≤—Å–µ–º—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É —á–∞—Ç–∞
                    container.click()
                    print(f"‚úÖ –ö–ª–∏–∫–Ω—É–ª–∏ –ø–æ —á–∞—Ç—É —Å –Ω–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏!")
                    
                    from time import sleep
                    sleep(3)  # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —á–∞—Ç–∞
                    
                    return True
                    
                except:
                    # –í —ç—Ç–æ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ –Ω–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
                    continue
                    
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —á–∞—Ç–∞ {i + 1}: {e}")
                continue
        
        print("‚ùå –ß–∞—Ç—ã —Å –Ω–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return False
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")
        return False

# ...existing code...